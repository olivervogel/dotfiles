#!/bin/bash

# Source the ".env" file environment variables are available...
if [ -f ./.env ]; then
  source ./.env;
fi

# check for environment variables
productionVariablesConfigured() {
    if [ -z "$DEPLOYMENT_SOURCE_PATH" ]; then
        return 1
    fi

    if [ -z "$DEPLOYMENT_PRODUCTION_HOST" ]; then
        return 1
    fi

    if [ -z "$DEPLOYMENT_PRODUCTION_USER" ]; then
        return 1
    fi

    if [ -z "$DEPLOYMENT_PRODUCTION_PORT" ]; then
        return 1
    fi

    if [ -z "$DEPLOYMENT_PRODUCTION_PATH" ]; then
        return 1
    fi

    return 0
}

# check for environment variables
stagingVariablesConfigured() {
    if [ -z "$DEPLOYMENT_SOURCE_PATH" ]; then
        return 1
    fi

    if [ -z "$DEPLOYMENT_STAGING_HOST" ]; then
        return 1
    fi

    if [ -z "$DEPLOYMENT_STAGING_USER" ]; then
        return 1
    fi

    if [ -z "$DEPLOYMENT_STAGING_PORT" ]; then
        return 1
    fi

    if [ -z "$DEPLOYMENT_STAGING_PATH" ]; then
        return 1
    fi

    return 0
}

# run actual rsync deployment
runDeployment() {
    if [[ $1 == 'production' ]]; then
        deployment_target="PRODUCTION"
        deployment_source_path=$DEPLOYMENT_SOURCE_PATH
        deployment_host=$DEPLOYMENT_PRODUCTION_HOST
        deployment_user=$DEPLOYMENT_PRODUCTION_USER
        deployment_port=$DEPLOYMENT_PRODUCTION_PORT
        deployment_path=$DEPLOYMENT_PRODUCTION_PATH
    else
        deployment_target="STAGING"
        deployment_source_path=$DEPLOYMENT_SOURCE_PATH
        deployment_host=$DEPLOYMENT_STAGING_HOST
        deployment_user=$DEPLOYMENT_STAGING_USER
        deployment_port=$DEPLOYMENT_STAGING_PORT
        deployment_path=$DEPLOYMENT_STAGING_PATH
    fi

    # run deployment via rsync
    if [[ $2 == 'go' ]]; then
        printf "Deploying on $deployment_target ...\n"
        rsync -rzvchl --force --delete --exclude-from="./.rsync_ignore" \
            -e "ssh -p${deployment_port} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" \
            $deployment_source_path $deployment_user@$deployment_host:$deployment_path
    else
        printf "Dry-running deployment on $deployment_target ...\n"
        rsync -rzvchl --dry-run --force --delete --exclude-from="./.rsync_ignore" \
            -e "ssh -p${deployment_port} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" \
            $deployment_source_path $deployment_user@$deployment_host:$deployment_path
    fi
}

# main script logic
case "$1" in
    production)
        if ! productionVariablesConfigured; then
            printf "Production environment not configured\n"
            printf "Please set the following environment variables:\n\n"
            printf "DEPLOYMENT_SOURCE_PATH=<value>\n"
            printf "DEPLOYMENT_PRODUCTION_HOST=<value>\n"
            printf "DEPLOYMENT_PRODUCTION_USER=<value>\n"
            printf "DEPLOYMENT_PRODUCTION_PORT=<value>\n"
            printf "DEPLOYMENT_PRODUCTION_PATH=<value>\n"
            exit 1
        else
            runDeployment $1 $2
        fi
        ;;
    staging)
        if ! stagingVariablesConfigured; then
            printf "Staging environment not configured\n"
            printf "Please set the following environment variables:\n\n"
            printf "DEPLOYMENT_SOURCE_PATH=<value>\n"
            printf "DEPLOYMENT_STAGING_HOST=<value>\n"
            printf "DEPLOYMENT_STAGING_USER=<value>\n"
            printf "DEPLOYMENT_STAGING_PORT=<value>\n"
            printf "DEPLOYMENT_STAGING_PATH=<value>\n"
            exit 1
        else
            runDeployment $1 $2
        fi
        ;;
    *)
        printf "Usage: deploy [production|staging] [go]\n"
        exit 1
        ;;
esac
