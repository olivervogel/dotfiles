#!/usr/bin/env bash

VERSION="1.0.0"
BASE_DIR="$HOME/.wiki"
TMP_DIR="$BASE_DIR/.tmp"
GIT_BRANCH="main"
WIKI_REPOSITORY_SHOW_URL="https://github.com/olivervogel/wiki"

# colors
ESC_SEQ="\x1b["
COL_RESET=${ESC_SEQ}"39;49;00m"
COL_LYELLOW=${ESC_SEQ}"33;01m"
COL_LGREEN=${ESC_SEQ}"32;01m"
COL_CYAN=${ESC_SEQ}"0;36m"
COL_GREEN=${ESC_SEQ}"0;32m"
COL_MAGENTA=${ESC_SEQ}"0;35m"

cmd_insert() {
    local article_path article_folder
    article_path=$1.md
    article_folder=$(dirname $article_path)

    if [[ ! $1 ]]; then
        printf "Usage: wiki insert <article-name>\n"
        exit 1 
    fi

    if [[ -f $BASE_DIR/$article_path ]]; then
        printf "Wiki article already exists.\n"
        exit 1
    else
        # create and edit tmp content
        mkdir -p $TMP_DIR/$article_folder && \
        $EDITOR $TMP_DIR/$article_path >/dev/tty

        # transfer tmp content to actual content & delete tmp content
        if [[ -f $TMP_DIR/$article_path ]]; then
            mkdir -p $BASE_DIR/$article_folder && \
            cat $TMP_DIR/$article_path > $BASE_DIR/$article_path && \
            rm -rf $TMP_DIR/$article_folder && \
            git_commit $article_path && \
            printf "New wiki article created.\n"
        else
            printf "No wiki article was created.\n"
        fi
    fi
}

cmd_edit() {
    local checksum_before checksum_after article_path
    article_path=$1.md

    if [[ ! $1 ]]; then
        printf "Usage: wiki edit <article-name>\n"
        exit 1 
    fi

    if [[ -f $BASE_DIR/$article_path ]]; then

        checksum_before=($(md5sum $BASE_DIR/$article_path))
        $EDITOR $BASE_DIR/$article_path
        checksum_after=($(md5sum $BASE_DIR/$article_path))

        if [ "$checksum_before" != "$checksum_after" ]; then
            git_commit $article_path
        else
            printf "Nothing has changed.\n"
        fi

    else
        printf "No such file.\n"
        exit 1
    fi
}

cmd_list() {
    git -C $BASE_DIR ls-files|rev|cut -c 4-|rev
}

cmd_browse() {
    local article_path
    article_path=$1.md

    if [[ ! $1 ]]; then
        printf "Usage: wiki browse <article-name>\n"
        exit 1 
    fi

    if [[ -f $BASE_DIR/$article_path ]]; then
        open $WIKI_REPOSITORY_SHOW_URL/blob/$GIT_BRANCH/$1.md
    else
        printf "No such file\n"
        exit 1
    fi
}

cmd_view() {
    local article_path
    article_path=$1.md

    if [[ ! $1 ]]; then
        printf "Usage: wiki view <article-name>\n"
        exit 1 
    fi

    if [[ -f $BASE_DIR/$article_path ]]; then
        less $BASE_DIR/$1.md
    else
        printf "No such file\n"
        exit 1
    fi
}

cmd_git() {
   case $1 in
       push)
           git -C $BASE_DIR push origin $GIT_BRANCH
           ;;
       pull)
           git -C $BASE_DIR pull origin $GIT_BRANCH
           ;;
   esac
}

cmd_version() {
    intro="ðŸ“š ${COL_GREEN}wiki${COL_RESET}"
    intro="$intro ${COL_CYAN}v${VERSION}\n${COL_RESET}"
    printf "$intro"
}

cmd_help() {
    cmd_version

    usage="${COL_LYELLOW}Usage:\n${COL_RESET}"
    usage="$usage  wiki <cmd> <options>"

    commands="${COL_LYELLOW}Commands:\n${COL_RESET}"
    commands="$commands  insert                      Insert a new wiki article\n"
    commands="$commands  edit                        Edit an existing wiki article\n"
    commands="$commands  view                        View an existing wiki article in terminal\n"
    commands="$commands  browse                      View an existing wiki article in browser\n"
    commands="$commands  list                        List all existing wiki articles\n"
    commands="$commands  git [push|pull]             Push or pull changes to remote repository\n"
    commands="$commands  help                        Show shelp (this screen)\n"

    printf "\n"
    printf "$usage\n\n"
    printf "$commands\n"
}

git_commit() {
    cd $BASE_DIR && \
        git add $1 && \
        git commit -m "Commit changes to $1" && \
        cd -
}

case "$1" in
    insert) shift;              cmd_insert "$@" ;;
    edit) shift;                cmd_edit "$@" ;;
    list) shift;                cmd_list "$@" ;;
    view) shift;                cmd_view "$@" ;;
    browse) shift;              cmd_browse "$@" ;;
    git) shift;                 cmd_git "$@" ;;
    help) shift;                cmd_help "$@" ;;
    *)                          cmd_help "$@" ;;
esac

exit 0
