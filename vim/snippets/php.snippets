snippet <?
<?php
endsnippet

snippet php
<?php


endsnippet

snippet ns
namespace ${1:Namespace};
endsnippet

snippet class
class ${1:ClassName}${2: extends ${3:BaseClass}}
{
	${0://}
}
endsnippet

snippet constr
public function __construct($1)
{
    ${0://}
}
endsnippet

snippet const
public const ${1:CONSTANT_NAME} = ${2:"${3:value}"};
endsnippet

snippet fn "" i
function ($1) {$2}
endsnippet

snippet -> "this" i
\$${1:this}->$0
endsnippet

snippet fun
${1:public} function ${2:functionName}($3): ${4:void}
{
    ${0:# code...}
}
endsnippet

snippet if
if (${1:condition}) {
    ${2:# code...}
}
endsnippet

snippet foreach
foreach ($${1:variable} as $${2:key}${3: => \$${4:value}}) {
    ${5:# code...}
}
endsnippet


snippet ret "" i
return ${1:\$value};
endsnippet

snippet e ""
echo ${1:\$var};
endsnippet

snippet #c "" i
# ${1:code}...
endsnippet

snippet => "" i
'$1' => '$2'${3:,}
endsnippet

snippet a "array"
[$0]${1:;}
endsnippet

snippet /**
/**
 * ${1:[document description]}
 *
 * @param  ${2:string} ${3:var}
 * @return ${4:void}
 */
endsnippet

snippet pp
echo "<pre>";
var_dump($${1:var});
echo "</pre>";
exit;
endsnippet

snippet .. "" i
" . $0 . "
endsnippet

snippet try
try {
	$0
} catch (${1:Exception} $e) {
	//
}
endsnippet
